name: Release Build

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required for creating releases
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Generate version info
      id: version
      run: |
        # Generate version based on date and commit
        DATE=$(date '+%Y%m%d')
        SHORT_SHA=$(git rev-parse --short HEAD)
        VERSION="v1.0.${DATE}.${SHORT_SHA}"
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        echo "version_code=$(date '+%Y%m%d%H')" >> $GITHUB_OUTPUT
        echo "Generated version: ${VERSION}"
        
    - name: Build Shared Libraries
      run: ./gradlew :shared:assembleRelease :shared-core:assembleRelease --stacktrace --no-daemon
      
    - name: Build Release APK
      env:
        VERSION_NAME: ${{ steps.version.outputs.version }}
        VERSION_CODE: ${{ steps.version.outputs.version_code }}
      run: ./gradlew :androidApp:assembleRelease --stacktrace --no-daemon
      
    - name: Sign APK (if keystore available)
      env:
        VERSION_NAME: ${{ steps.version.outputs.version }}
      run: |
        APK_PATH="androidApp/build/outputs/apk/release/androidApp-release-unsigned.apk"
        SIGNED_APK_PATH="androidApp/build/outputs/apk/release/mountainspotter-${{ steps.version.outputs.version }}.apk"
        
        # For now, just rename the unsigned APK to include version
        # In the future, this is where signing would happen with proper keystore
        cp "$APK_PATH" "$SIGNED_APK_PATH"
        echo "APK renamed to include version: $SIGNED_APK_PATH"
        
    - name: Create Release
      uses: ncipollo/create-release@v1
      with:
        tag: ${{ steps.version.outputs.version }}
        name: Mountain Spotter ${{ steps.version.outputs.version }}
        body: |
          ## Mountain Spotter Release ${{ steps.version.outputs.version }}
          
          **What's New:**
          - Automated release from commit ${{ github.sha }}
          - Built on ${{ github.event.head_commit.timestamp }}
          
          **Download:**
          - Android APK: See attachments below
          
          **Installation:**
          - Download the APK file
          - Enable "Install from unknown sources" on your Android device
          - Install the APK file
          
          **Commit:** ${{ github.sha }}
          **Author:** ${{ github.event.head_commit.author.name }}
          **Message:** ${{ github.event.head_commit.message }}
        artifacts: "androidApp/build/outputs/apk/release/mountainspotter-${{ steps.version.outputs.version }}.apk"
        token: ${{ secrets.GITHUB_TOKEN }}
        draft: false
        prerelease: false